<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        BSI+pQVN8AAAAABJRU5ErkJggg==
</value>
  </data>
</root>